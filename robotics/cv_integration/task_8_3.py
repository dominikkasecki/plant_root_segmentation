import logging

import cv2

from helper_functions import plot_root_tips_with_image, extract_petri_dish
from task_8_1 import generate_predictions
from task_8_2 import segment_predictions


def detect_root_tips(image, original_images_folder, predictions_folder, model_path, patch_size, batch_size):
    """
    Detect root tips in the given image using a trained model and post-processing pipeline.

    Parameters:
    ----------
    image : np.ndarray
        RGB image of the plate to process for root tip detection.
    original_images_folder : str
        Path to the folder where intermediate original images will be stored.
    predictions_folder : str
        Path to the folder where prediction outputs will be saved.
    model_path : str
        Path to the trained model for generating predictions.
    patch_size : int
        Size of image patches used during prediction.
    batch_size : int
        Batch size for processing image patches.

    Returns:
    -------
    tuple
        - root_tips : list of tuple
            A list of (x_pixel, y_pixel) coordinates for each detected root tip.
        - conversion_values : tuple
            Conversion values or metadata extracted from the Petri dish image.

    Notes:
    ------
    - The function saves the provided image as an intermediate file for processing.
    - Predictions are generated using the specified model, and root tips are segmented from these predictions.
    - Visualization of detected root tips on the original image is performed for validation.
    """
    logging.info('Detect root tips execution starts ......')

    # Clear out all the contents of the items previously generated by the pipeline

    # Let's first delete the previous run's remaining images
    original_image_path = f'{str(original_images_folder)}/detected_image_1.png'
    cv2.imwrite(original_image_path, image)

    generate_predictions(original_images_folder, predictions_folder, model_path, patch_size, batch_size=batch_size)

    root_tips = segment_predictions(predictions_dir=predictions_folder)

    print('These are returned root tips', root_tips)

    # Since we only process one image, select the first item of root_tips [[(x, y), (x, y) ...etc]]
    root_tips = root_tips[0]

    # Ensure root tips are correct
    plot_root_tips_with_image(original_image_path, root_tips)

    conversion_values = extract_petri_dish(original_image_path)
    print('These are conversion values', conversion_values)
    return root_tips, conversion_values
